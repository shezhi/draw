<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" version="28.0.7">
  <diagram name="Page-1" id="SxBxlb1N_tmzn9J95kwx">
    <mxGraphModel dx="2874" dy="1158" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="5000" pageHeight="10000" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="eSRTpMrdN1vt4MDyCHNU-1" value="&lt;div style=&quot;background-color:#ffffff;color:#080808&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;training(&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    lp.extract(args),&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    op.extract(args),&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    pp.extract(args),&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    args.test_iterations,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    args.save_iterations,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    args.checkpoint_iterations,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    args.start_checkpoint,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;    args.debug_from&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcf4d4;&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="50" y="160" width="370" height="220" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-1" value="&lt;div style=&quot;color: rgb(8, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;初始化高斯&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;gaussians = GaussianModel(model_params.sh_degree, opt_params.do_isotropic)&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); background-color: rgb(252, 244, 212); font-style: italic;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="490" y="100" width="850" height="80" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-2" value="&lt;div style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8);&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;初始化场景&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;scene = Scene(model_params, gaussians, shuffle=opt_params.shuffle)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="490" y="220" width="850" height="70" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-3" value="&lt;div style=&quot;color: rgb(8, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;引入后向散射网络和衰减网络&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;bs_model = BackscatterNetV2&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;at_model = AttenuateNetV3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="490" y="340" width="860" height="120" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-4" value="&lt;div style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8);&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;定义损失函数&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;depth_smooth_criterion = SmoothDepthLoss().cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;gw_criterion = GrayWorldPriorLoss().cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;rgb_sv_criterion = RgbSpatialVariationLoss().cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;rgb_01_criterion = RgbSaturationLoss(saturation_val=&lt;/span&gt;&lt;span style=&quot;color: rgb(23, 80, 235); background-color: rgb(252, 244, 212);&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;).cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;rgb_sat_criterion = RgbSaturationLoss(saturation_val=&lt;/span&gt;&lt;span style=&quot;color: rgb(23, 80, 235); background-color: rgb(252, 244, 212);&quot;&gt;0.7&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;).cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;alpha_bg_criterion = AlphaBackgroundLoss(use_kornia=opt_params.use_lab).cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;dsc_at_criterion = AttenuateLoss().cuda()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(252, 244, 212);&quot;&gt;dcp_criterion = DarkChannelPriorLossV3().cuda()&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="490" y="480" width="890" height="250" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-5" value="&lt;div style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8);&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;font color=&quot;#0033b3&quot;&gt;背景学习&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;if &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;opt_params&lt;/span&gt;.learn_background&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="490" y="740" width="850" height="70" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-6" value="&lt;div style=&quot;background-color:#ffffff;color:#080808&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#0033b3;&quot;&gt;while &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;iteration &lt;/span&gt;&amp;lt; &lt;span style=&quot;color:#000000;&quot;&gt;opt_params&lt;/span&gt;.iterations + &lt;span style=&quot;color:#1750eb;&quot;&gt;1&lt;/span&gt;:&lt;span style=&quot;color:#8c8c8c;font-style:italic;&quot;&gt;#30000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="490" y="880" width="570" height="50" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-7" value="每一次迭代，更新xyz的学习率&lt;div&gt;&lt;div style=&quot;background-color:#ffffff;color:#080808&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;div&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;gaussians&lt;/span&gt;.update_learning_rate(&lt;span style=&quot;color:#000000;&quot;&gt;iteration&lt;/span&gt;)&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="1070" y="940" width="810" height="80" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-8" value="&lt;div style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8);&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;font color=&quot;#0033b3&quot;&gt;冻结-解除&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;if &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;iteration &lt;/span&gt;== &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;opt_params&lt;/span&gt;.seathru_from_iter + &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;:&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt;#10000&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;if not &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;print_message_once&lt;/span&gt;:&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-family: &amp;quot;DejaVu Sans Mono&amp;quot;, monospace;&quot;&gt;冻结所有参数，除了颜色&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt; colors&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 128);&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color: rgb(6, 125, 23);&quot;&gt;f&quot;[&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 55, 166);&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;iteration&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 55, 166);&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 125, 23);&quot;&gt;] freezing gs parameters except color at seathru + 1&quot;&lt;/span&gt;)&lt;br&gt;        &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;print_message_once &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;True&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;gaussians&lt;/span&gt;.freeze_parameters(&lt;span style=&quot;color: rgb(102, 0, 153);&quot;&gt;xyz&lt;/span&gt;=&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;True&lt;/span&gt;, &lt;span style=&quot;color: rgb(102, 0, 153);&quot;&gt;colors&lt;/span&gt;=&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;False&lt;/span&gt;, &lt;span style=&quot;color: rgb(102, 0, 153);&quot;&gt;opacity&lt;/span&gt;=&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;True&lt;/span&gt;, &lt;span style=&quot;color: rgb(102, 0, 153);&quot;&gt;scaling&lt;/span&gt;=&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;True&lt;/span&gt;, &lt;span style=&quot;color: rgb(102, 0, 153);&quot;&gt;rotation&lt;/span&gt;=&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;pre style=&quot;color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 13.5pt;&quot;&gt;&lt;div&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#0033b3;&quot;&gt;if &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;iteration &lt;/span&gt;== &lt;span style=&quot;color:#000000;&quot;&gt;opt_params&lt;/span&gt;.seathru_from_iter + &lt;span style=&quot;color:#1750eb;&quot;&gt;2&lt;/span&gt;:&lt;span style=&quot;color:#8c8c8c;font-style:italic;&quot;&gt;#10000&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#8c8c8c;font-style:italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#000080;&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color:#067d17;&quot;&gt;f&quot;[&lt;/span&gt;&lt;span style=&quot;color:#0037a6;&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;iteration&lt;/span&gt;&lt;span style=&quot;color:#0037a6;&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color:#067d17;&quot;&gt;] unfreezing gs parameters at seathru + 2&quot;&lt;/span&gt;)&lt;span style=&quot;color:#8c8c8c;font-style:italic;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#8c8c8c;font-style:italic;font-family:&#39;DejaVu Sans Mono&#39;,monospace;&quot;&gt;解冻所有参数，恢复全部可训练。&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#8c8c8c;font-style:italic;font-family:&#39;DejaVu Sans Mono&#39;,monospace;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;gaussians&lt;/span&gt;.freeze_parameters(&lt;span style=&quot;color:#660099;&quot;&gt;xyz&lt;/span&gt;=&lt;span style=&quot;color:#0033b3;&quot;&gt;False&lt;/span&gt;, &lt;span style=&quot;color:#660099;&quot;&gt;colors&lt;/span&gt;=&lt;span style=&quot;color:#0033b3;&quot;&gt;False&lt;/span&gt;, &lt;span style=&quot;color:#660099;&quot;&gt;opacity&lt;/span&gt;=&lt;span style=&quot;color:#0033b3;&quot;&gt;False&lt;/span&gt;, &lt;span style=&quot;color:#660099;&quot;&gt;scaling&lt;/span&gt;=&lt;span style=&quot;color:#0033b3;&quot;&gt;False&lt;/span&gt;, &lt;span style=&quot;color:#660099;&quot;&gt;rotation&lt;/span&gt;=&lt;span style=&quot;color:#0033b3;&quot;&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="1060" y="1060" width="1200" height="280" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-9" value="把当前相机包装成渲染对象render&lt;div&gt;&lt;div style=&quot;background-color:#ffffff;color:#080808&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;render_pkg &lt;/span&gt;= render(&lt;span style=&quot;color:#000000;&quot;&gt;viewpoint_cam&lt;/span&gt;, &lt;span style=&quot;color:#000000;&quot;&gt;gaussians&lt;/span&gt;, &lt;span style=&quot;color:#000000;&quot;&gt;pipe_params&lt;/span&gt;, &lt;span style=&quot;color:#000000;&quot;&gt;bg&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1070" y="1400" width="990" height="110" as="geometry" />
        </mxCell>
        <mxCell id="6eUgvTbDQXa9HMW_hPvF-10" value="&lt;div style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8);&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;将生成的图像与背景相融合，刚开始的背景是一个可学习得变量，学到一个平均背景值常亮，然后等深度获得稳定后，将深度投入到bg_Model中&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;if &lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(0, 0, 0);&quot;&gt;opt_params&lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); white-space: normal;&quot;&gt;.bg_from_bs &lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(0, 51, 179);&quot;&gt;and &lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(0, 0, 0);&quot;&gt;opt_params&lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); white-space: normal;&quot;&gt;.do_seathru &lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(0, 51, 179);&quot;&gt;and &lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(0, 0, 0);&quot;&gt;iteration &lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); white-space: normal;&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(0, 0, 0);&quot;&gt;opt_params&lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); color: light-dark(rgb(8, 8, 8), rgb(230, 230, 230)); white-space: normal;&quot;&gt;.seathru_from_iter:&lt;/span&gt;&lt;span style=&quot;font-size: 13.5pt; background-color: light-dark(rgb(255, 255, 255), rgb(18, 18, 18)); white-space: normal; color: rgb(140, 140, 140); font-style: italic;&quot;&gt;# True True iteration&amp;gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt;    # do not use learned background; rely on backscatter to hopefully fill this in&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;image &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;rendered_image&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;if not &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;done_binf_init_with_bg&lt;/span&gt;:&lt;br&gt;        &lt;span style=&quot;color: rgb(0, 0, 128);&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color: rgb(6, 125, 23);&quot;&gt;f&quot;[&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 55, 166);&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;iteration&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 55, 166);&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 125, 23);&quot;&gt; updated bs_model B_inf with learnred_bg parameters &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 55, 166);&quot;&gt;{&lt;/span&gt;torch.sigmoid(&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;learned_bg&lt;/span&gt;)&lt;span style=&quot;color: rgb(0, 55, 166);&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 125, 23);&quot;&gt;&quot;&lt;/span&gt;)&lt;br&gt;        &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;bs_model&lt;/span&gt;.B_inf = torch.nn.Parameter(torch.clone(&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;learned_bg&lt;/span&gt;.data).reshape(&lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;)).cuda()&lt;br&gt;        &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;bs_optimizer &lt;/span&gt;= torch.optim.Adam(&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;bs_model&lt;/span&gt;.parameters(), &lt;span style=&quot;color: rgb(102, 0, 153);&quot;&gt;lr&lt;/span&gt;=&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;opt_params&lt;/span&gt;.bs_at_lr)&lt;br&gt;        &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;done_binf_init_with_bg &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;True&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 179);&quot;&gt;else&lt;/span&gt;:&lt;br&gt;    &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;bg_image &lt;/span&gt;= torch.sigmoid(&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;learned_bg&lt;/span&gt;).reshape(&lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;) * (&lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1 &lt;/span&gt;- &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;image_alpha&lt;/span&gt;)&lt;br&gt;    &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;bgdetached_image &lt;/span&gt;= torch.sigmoid(&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;learned_bg&lt;/span&gt;.detach()).reshape(&lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1&lt;/span&gt;) * (&lt;span style=&quot;color: rgb(23, 80, 235);&quot;&gt;1 &lt;/span&gt;- &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;image_alpha&lt;/span&gt;)&lt;br&gt;    &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;image &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;rendered_image &lt;/span&gt;+ &lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;bg_image&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="1070" y="1550" width="1480" height="350" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
